loan_app/
│
├── model.pkl                 ← saved trained model
├── app.py                   ← Flask app
├── templates/
│   └── index.html           ← form to enter input
└── static/
    └── style.css            ← optional styling
import pickle

# Save the trained model
with open('model.pkl', 'wb') as file:
    pickle.dump(model, file)
from flask import Flask, request, render_template
import pickle
import numpy as np
import pandas as pd

app = Flask(__name__)

# Load the trained model
with open('model.pkl', 'rb') as f:
    model = pickle.load(f)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Example: getting 5 input features from the form
        features = [float(x) for x in request.form.values()]
        final_input = np.array(features).reshape(1, -1)

        prediction = model.predict(final_input)
        result = "Loan Not Fully Paid" if prediction[0] == 1 else "Loan Fully Paid"
        return render_template('index.html', prediction_text=f'Prediction: {result}')
    except:
        return render_template('index.html', prediction_text='Invalid input or model error.')

if __name__ == '__main__':
    app.run(debug=True)
